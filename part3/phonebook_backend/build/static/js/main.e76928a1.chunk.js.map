{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","value","onChange","Persons","persons","filter","handleRemove","person","name","toLowerCase","includes","map","number","onClick","id","PersonForm","props","onSubmit","submit","onChangeName","onChangeNumber","type","Notification","message","error","className","baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","update","put","remove","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filterName","setFilterName","setMessage","messageError","setMessageError","useEffect","initialPersons","event","target","preventDefault","find","window","confirm","changedPerson","returnedPerson","setTimeout","catch","handleUpdate","personObject","concat","parseInt","personToRemove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e76928a1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({value, onChange}) => {\r\n    return (\r\n      <div>\r\n        filter shown with<input value={value} onChange={onChange}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Persons = ({persons, filter, handleRemove}) => {\r\n  return (\r\n    <>\r\n      {persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase())).map(person =>\r\n        <p key={person.name}>\r\n          {person.name} {person.number}\r\n          <button onClick={handleRemove} value={person.id}>delete</button>\r\n        </p>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.submit}>\r\n        <div>\r\n          name: <input value={props.name} onChange={props.onChangeName}/>\r\n          <br />\r\n          number: <input value={props.number} onChange={props.onChangeNumber}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Notification = ({ message, error = false }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={error ? \"error\" : \"message\"}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n//[ Apparently using export default with a lot of const causes a warning \r\n//[ so im creating a unique const to use as default\r\nexport const personService = {\r\n  getAll, \r\n  create,\r\n  update,\r\n  remove\r\n}\r\n\r\nexport default personService\r\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterName, setFilterName ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ messageError, setMessageError ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilterName(event.target.value)\n  }\n\n  const handleUpdate = (person) => {\n    const changedPerson = { ...person, number: newNumber }\n    personService\n      .update(changedPerson.id, changedPerson)\n      .then(returnedPerson => {\n        setNewName('')\n        setNewNumber('')\n        setMessage(`Updated ${returnedPerson.name}`)\n        setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson))\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n      .catch(() => {\n        setMessageError(`${changedPerson.name} was previously removed from server`)\n        setTimeout(() => {\n          setMessageError(null)\n        }, 5000)\n        setPersons(persons.filter(person => person.id !== changedPerson.id))\n      })\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n    const person = persons.find(person => person.name === newName)\n    if(person && window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n      return handleUpdate(person)\n    }\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    personService\n      .create(personObject)\n      .then(returnedPerson => {\n        setNewName('')\n        setNewNumber('')\n        setMessage(`Added ${returnedPerson.name}`)\n        setPersons(persons.concat(returnedPerson))\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n  }\n\n  const remove = (event) => {\n    const id = parseInt(event.target.value)\n    const personToRemove = persons.find(person => person.id === id)\n    if (window.confirm(\"Delete \" + personToRemove.name)) { \n      personService\n      .remove(id)\n      .then(() => \n        setPersons(persons.filter(person => \n          person.id !== id)\n        )\n      )\n      .catch(() => {\n        setMessageError(`${personToRemove.name} was already removed from server`)\n        setTimeout(() => {\n          setMessageError(null)\n        }, 5000)\n        setPersons(persons.filter(person => person.id !== personToRemove.id))\n      })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Notification message={messageError} error={true} />\n\n      <Filter value={filterName} onChange={handleFilterChange} />\n\n      <h3>Add a new</h3>\n      \n      <PersonForm submit={addName} name={newName} number={newNumber} onChangeName={handleNameChange} onChangeNumber={handleNumberChange}/>\n      \n      <h3>Numbers</h3>\n\n      <Persons persons={persons} filter={filterName} handleRemove={remove} />\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}